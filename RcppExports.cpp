// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// softthresh
arma::vec softthresh(arma::vec Mx, double lambda);
RcppExport SEXP _sgspls_softthresh(SEXP MxSEXP, SEXP lambdaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type Mx(MxSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    rcpp_result_gen = Rcpp::wrap(softthresh(Mx, lambda));
    return rcpp_result_gen;
END_RCPP
}
// lambdazerosubgroup
double lambdazerosubgroup(double lambda, arma::vec Mx, arma::vec subgroupX, double alpha1, double alpha2);
RcppExport SEXP _sgspls_lambdazerosubgroup(SEXP lambdaSEXP, SEXP MxSEXP, SEXP subgroupXSEXP, SEXP alpha1SEXP, SEXP alpha2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Mx(MxSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type subgroupX(subgroupXSEXP);
    Rcpp::traits::input_parameter< double >::type alpha1(alpha1SEXP);
    Rcpp::traits::input_parameter< double >::type alpha2(alpha2SEXP);
    rcpp_result_gen = Rcpp::wrap(lambdazerosubgroup(lambda, Mx, subgroupX, alpha1, alpha2));
    return rcpp_result_gen;
END_RCPP
}
// sgssoftthresh
arma::vec sgssoftthresh(arma::vec Mx, arma::vec subgroupX, double lambda, double alpha1, double alpha2, double g);
RcppExport SEXP _sgspls_sgssoftthresh(SEXP MxSEXP, SEXP subgroupXSEXP, SEXP lambdaSEXP, SEXP alpha1SEXP, SEXP alpha2SEXP, SEXP gSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type Mx(MxSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type subgroupX(subgroupXSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type alpha1(alpha1SEXP);
    Rcpp::traits::input_parameter< double >::type alpha2(alpha2SEXP);
    Rcpp::traits::input_parameter< double >::type g(gSEXP);
    rcpp_result_gen = Rcpp::wrap(sgssoftthresh(Mx, subgroupX, lambda, alpha1, alpha2, g));
    return rcpp_result_gen;
END_RCPP
}
// updataU
arma::vec updataU(arma::vec Mx, arma::vec groupX, arma::vec subgroupX, double lambda, double alpha1, double alpha2);
RcppExport SEXP _sgspls_updataU(SEXP MxSEXP, SEXP groupXSEXP, SEXP subgroupXSEXP, SEXP lambdaSEXP, SEXP alpha1SEXP, SEXP alpha2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type Mx(MxSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type groupX(groupXSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type subgroupX(subgroupXSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type alpha1(alpha1SEXP);
    Rcpp::traits::input_parameter< double >::type alpha2(alpha2SEXP);
    rcpp_result_gen = Rcpp::wrap(updataU(Mx, groupX, subgroupX, lambda, alpha1, alpha2));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_sgspls_softthresh", (DL_FUNC) &_sgspls_softthresh, 2},
    {"_sgspls_lambdazerosubgroup", (DL_FUNC) &_sgspls_lambdazerosubgroup, 5},
    {"_sgspls_sgssoftthresh", (DL_FUNC) &_sgspls_sgssoftthresh, 6},
    {"_sgspls_updataU", (DL_FUNC) &_sgspls_updataU, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_sgspls(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
